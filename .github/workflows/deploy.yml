name: CI/CD Pipeline

on:
  push:
    branches: ["main"]

# Define permissões do GITHUB_TOKEN para permitir a implantação nas páginas do GitHub
permissions:
  contents: read
  pages: write
  id-token: write

# Permitir apenas uma implantação simultânea, ignorando as execuções na fila entre a execução em andamento e a última na fila.
# No entanto, NÃO cancele execuções em andamento, pois queremos permitir que essas implantações de produção sejam concluídas.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # A desativação do clone superficial é recomendada para melhorar a relevância dos relatórios
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    permissions: write-all
    needs: sonarcloud
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

        # Instalação de dependências, testes, construção e deploy.

      - name: Instalação do Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      # Armazenar em cache as dependências para acelerar a construção
      - name: Cache das dependências
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Instalando dependências do app
        run: npm i

      - name: Testando app
        run: npm test

      - name: Criando Build do app
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Criando Release do app
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Construa com Jekyll para GitHub Pages
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./build
          destination: ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: homolog
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy para o GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
